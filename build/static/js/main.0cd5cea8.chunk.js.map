{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","minterAddress","useState","address","setAddresss","error","setError","errorState","setErrorState","displays","display","a","window","ethereum","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","Abi","abi","mint","alert","console","log","data","message","className","href","src","alt","type","value","onChange","evt","preventDefault","validatedAddress","utils","getAddress","target","e","err","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2+/VA8FeA,MAvFf,WAEE,IAAMC,EAAgB,6CAFT,EAGkBC,mBAAS,IAH3B,mBAGNC,EAHM,KAGGC,EAHH,OAIaF,mBAAS,IAJtB,mBAING,EAJM,KAICC,EAJD,OAKuBJ,mBAAS,UALhC,mBAKNK,EALM,KAKMC,EALN,KAMPC,EAAW,CACfC,QAASH,GAPE,4CAUb,gCAAAI,EAAA,yDACiC,qBAApBC,OAAOC,SADpB,wBAEUC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpDK,EAASJ,EAASK,YAClBC,EAAW,IAAIL,IAAOM,SAASpB,EAAeqB,EAAIC,IAAKL,GAJjE,kBAMYE,EAASI,KAAKrB,GAN1B,OAOMsB,MAAM,+FAPZ,kDASMC,QAAQC,IAAI,KAAMC,KAAKC,SACvBrB,EAAc,QACdF,EAAS,KAAMsB,KAAKC,SAX1B,gCAeIJ,MAAM,qBAfV,2DAVa,sBA8Cb,OACE,sBAAKK,UAAU,sGAAf,UACI,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,OAAf,SACE,mBAAGC,KAAK,IAAR,SACE,qBAAKD,UAAU,aAAaE,IAAI,4EAA4EC,IAAI,SAGpH,gCACA,mBAAGH,UAAU,gGAAb,sCAGA,mBAAGA,UAAU,6EAAb,kLAMF,gCACE,uBAAOI,KAAK,OAAOC,MAAOhC,EAASiC,SApCrB,SAACC,GACrBA,EAAIC,iBACJ,IACE,IAAIC,EAAmBxB,IAAOyB,MAAMC,WAAWJ,EAAIK,OAAOP,OAC1D/B,EAAYmC,GACZ/B,EAAc,UACd,MAAOmC,GACP,IAAIC,EAAkB,KAAZD,EAAER,MAAe,kBAAoB,GAC/C7B,EAASsC,GACTxC,EAAYiC,EAAIK,OAAOP,OACvB3B,EAAwB,KAAVmC,EAAER,MAAa,SAAW,QAG1CT,QAAQC,IAAIU,EAAIK,OAAOP,QAuB2CU,YAAY,qBAAqBf,UAAU,sJACvG,mBAAGA,UAAS,WAAMrB,EAASC,QAAf,iDAAZ,SACGL,IAEH,4BACA,wBAAQyC,QAtEH,2CAsEoBhB,UAAU,8PAA8PI,KAAK,SAAtS,oCCjEKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cd5cea8.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport Abi from './contractAbi.json';\n\n\n\nfunction App() {\n\n  const minterAddress = \"0x316748158Bf8a5C50cfF39aef9AC44aD0a9579B6\";\n  const [address, setAddresss] = useState('')\n  const [error, setError] = useState('')\n  const [errorState, setErrorState] = useState('hidden')\n  const displays = {\n    display: errorState\n  };\n\n  async function faucet() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(minterAddress, Abi.abi, signer);\n      try {\n        await contract.mint(address);\n        alert(\"Token sent, check your wallet, Contract address: 0x316748158Bf8a5C50cfF39aef9AC44aD0a9579B6\")\n      } catch (error) {\n        console.log(error.data.message)\n        setErrorState('none')\n        setError(error.data.message)\n      }\n      \n    } else {\n      alert('download Metamask')\n    }\n  }\n\n  const handleAddress = (evt) => {\n    evt.preventDefault();\n    try {\n      let validatedAddress = ethers.utils.getAddress(evt.target.value)\n      setAddresss(validatedAddress);\n      setErrorState('hidden')\n    } catch (e) {\n      let err = e.value !== '' ? \"invalid Address\" : '';\n      setError(err)\n      setAddresss(evt.target.value)\n      setErrorState(e.value==='' ? 'hidden' : 'none')\n    }\n    \n    console.log(evt.target.value)\n  }\n\n\n  return (\n    <div className=\"text-center w-max sm:w-screen align-center gap-40 py-5 h-screen flex flex-col justify-start bg-main\">\n        <div className=\"flex flex-row sm:space-x-80 \">\n          <div className=\"flex\">\n            <a href=\"/\">\n              <img className=\"h-9 w-auto\" src=\"https://res.cloudinary.com/zerubbabel/image/upload/v1630013463/mpicon.svg\" alt=\"\" />\n            </a>\n          </div>\n          <div>\n          <p className=\"mt-2 text-3xl leading-8 text-center font-extrabold tracking-tighter text-gray-900 sm:text-4xl\">\n            Minority Governace Token\n          </p>\n          <p className=\"mt-4 max-w-2xl text-xl text-center tracking-tight text-gray-100 lg:mx-auto\">\n            Note: To be eligible for the governance token, you must possess a minority token in your wallet. each wallet is entitled to only one governance token request.\n          </p>\n          </div>\n        </div>\n\n        <div>\n          <input type=\"text\" value={address} onChange={handleAddress} placeholder=\"Enter your address\" className=\"px-3 py-3 placeholder-blueGray-300 text-blueGray-600 bg-white rounded text-sm border-0 shadow outline-none w-80 h-8 focus:outline-none focus:ring\"></input>\n          <p className={` ${displays.display} items-center text-red-500 text-1xl mt-1 ml-1`}>\n            {error}\n          </p>\n          <p>\n          <button onClick={faucet} className=\"text-pink-500 bg-transparent mt-3 border border-solid border-pink-500 hover:bg-pink-500 hover:text-white active:bg-pink-600 font-bold uppercase text-sm px-6 py-3 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" type=\"button\"\n              >\n          Send My Token\n        </button>\n          </p>\n          \n          \n        </div>\n        \n\n\n          \n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}